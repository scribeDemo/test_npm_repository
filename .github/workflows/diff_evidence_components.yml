name:  different_evidence_component

env:
  LOGICAL_APP_NAME: dev_new_last_version # The app name all these SBOMs will be assosiated with
  # SBOM Author meta data - Optional
  AUTHOR_NAME: Alona Dodukh
  AUTHOR_EMAIL: alona@thiscompany.com 
  AUTHOR_PHONE: 11-00-999
  # SBOM Supplier meta data - Optional
  SUPPLIER_NAME: Scribe-Security 
  SUPPLIER_URL: www.scribesecurity.com 
  SUPPLIER_EMAIL: info@scribesecurity.com
  SUPPLIER_PHONE: 001-001-0011
  PRODUCT_NAME: ${{ github.event.inputs.product_name }}
  PRODUCT_VERSION: ${{ github.event.inputs.product_version }}
  SCRIBE_URL: ${{ vars.SCRIBE_URL }}

on: 
  workflow_dispatch:
   inputs:
      environment:
        type: choice
        description: Environment
        required: true
        options:
          - dev-demo
          - dev2_eks
          - dev_eks
          - test_eks
          - stg_eks
          - ci_eks
          - prod_eks
      product_version:
         description: 'Put product version'
         # required: true
         default: 'v.1.8.2'
      product_name:
         description: 'Put product name'
         # required: true
         default: 'diff_evidence_component'
  

jobs:
  build:
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest

    permissions:
        contents: read
        packages: write
        id-token: write
    
    steps:

      - uses: actions/checkout@v4
      
      - name: Generate signed git SBOM for repo content
        uses: scribe-security/action-bom@master
        with:
        #   target: 'https://github.com/mongo-express/mongo-express.git'
         target: 'git:.'
        # format: statement-cyclonedx-json, attest-cyclonedx-json, statement-generic	
         format: attest
         scribe.disable: false
         product-key: ${{env.PRODUCT_NAME}}
         product-version: ${{env.PRODUCT_VERSION}}
         scribe-client-secret: ${{ secrets.CLIENT_SECRET_AUTH}}
         scribe-url: ${{env.SCRIBE_URL}}
         components: packages,files,dep
         deliverable: true
         gate: github_action

      # - name: Generate signed git for scribe-public/sample-policies
      #   uses: scribe-security/action-bom@master
      #   with:
      #   #   target: 'https://github.com/mongo-express/mongo-express.git'
      #    target: 'scribe-public/sample-policies.git'
      #   # format: statement-cyclonedx-json, attest-cyclonedx-json, statement-generic	
      #    format: attest
      #    # scribe.disable: false
      #    product-key: ${{env.PRODUCT_NAME}}
      #    product-version: ${{env.PRODUCT_VERSION}}
      #    scribe-client-secret: ${{ secrets.CLIENT_SECRET_AUTH}}
      #    scribe-url: ${{env.SCRIBE_URL}}
      #    components: packages,files,dep
      #    # deliverable: true
      #    gate: github_action

      - name: Scm generate dir bom, upload to scribe
        # id: valint_bom_scm
        uses: scribe-security/action-bom@master
        with:
        # format: statement-cyclonedx-json, attest-cyclonedx-json, statement-generic	
          target: 'dir:./'
          format: statement-cyclonedx-json
          product-key: ${{env.PRODUCT_NAME}}
          product-version: ${{env.PRODUCT_VERSION}}
          scribe-client-secret: ${{ secrets.CLIENT_SECRET_AUTH}}
          scribe-url: ${{env.SCRIBE_URL}}
          components: packages,files,dep
          deliverable: true
          gate: github_action
      
      - name: Build the Docker image
          # run: docker build . -t ${{ github.repository }}:${{ github.sha }}
        run: |
            docker build -t my-image:latest .   
     
      - name: Generate signed docker SBOM for docker image
        uses: scribe-security/action-bom@master
        with:
                # statement-cyclonedx-json, attest, 
                # target: 'docker:${{ github.repository }}:${{ github.sha }}'
                type: docker
                target: my-image:latest
                format: attest-cyclonedx-json
                scribe.disable: false
                product-key: ${{env.PRODUCT_NAME}}
                product-version: ${{env.PRODUCT_VERSION}}
                scribe-client-secret: ${{ secrets.CLIENT_SECRET_AUTH}}
                scribe-url: ${{env.SCRIBE_URL}}
                components: packages,files,dep
                deliverable: true
                gate: github_action

          
      - name: Scm generate registry:busybox:latest bom, upload to scribe
        # id: valint_bom_scm
        uses: scribe-security/action-bom@master
        with:
          type: registry
          target: busybox:latest
          product-key: ${{env.PRODUCT_NAME}}
          product-version: ${{env.PRODUCT_VERSION}}
          scribe-client-secret: ${{ secrets.CLIENT_SECRET_AUTH}}
          scribe-url: ${{env.SCRIBE_URL}}
          components: packages,files,dep
          author-name: ${{env.AUTHOR_NAME}}
          author-email: ${{env.AUTHOR_EMAIL}}
          author-phone: ${{env.AUTHOR_PHONE}}
          supplier-name: ${{env.SUPPLIER_NAME}}
          supplier-url: ${{env.SUPPLIER_URL}}
          supplier-email: ${{env.SUPPLIER_EMAIL}} 
          supplier-phone: ${{env.SUPPLIER_PHONE}}
          gate: github_action
      
      - name: Scm generate file sbom, upload to scribe
        # id: valint_bom_scm
        uses: scribe-security/action-bom@master
        with:
          type: file
          target: './package.json'
          scribe.disable: false
          product-key: ${{env.PRODUCT_NAME}}
          product-version: ${{env.PRODUCT_VERSION}}
          scribe-client-secret: ${{ secrets.CLIENT_SECRET_AUTH}}
          scribe-url: ${{env.SCRIBE_URL}}
          gate: github_action
          
      
      - name: Generate SLSA provenance statement
        id: valint_slsa_statement
        uses: scribe-security/action-bom@master
        with:
                # target: 'docker:${{ github.repository }}:${{ github.sha }}'
                type: docker
                target: my-image:latest
                # attest-slsa, statement-slsa, attest-generic
                format: attest-slsa
                product-key: ${{env.PRODUCT_NAME}}
                product-version: ${{env.PRODUCT_VERSION}}
                scribe-client-secret: ${{ secrets.CLIENT_SECRET_AUTH}}
                scribe-url: ${{env.SCRIBE_URL}}
                gate: github_action
                
      - uses: actions/upload-artifact@v3
        with:
                name: provenance
                path: ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}
       

name:  different_sign_format

env:
  LOGICAL_APP_NAME: dev_new_last_version # The app name all these SBOMs will be assosiated with
  # SBOM Author meta data - Optional
  AUTHOR_NAME: Alona Dodukh
  AUTHOR_EMAIL: alona@thiscompany.com 
  AUTHOR_PHONE: 11-00-999
  # SBOM Supplier meta data - Optional
  SUPPLIER_NAME: Scribe-Security 
  SUPPLIER_URL: www.scribesecurity.com 
  SUPPLIER_EMAIL: info@scribesecurity.com
  SUPPLIER_PHONE: 001-001-0011
  PRODUCT_NAME: ${{ github.event.inputs.product_name }}
  PRODUCT_VERSION: ${{ github.event.inputs.product_version }}
  SCRIBE_URL: ${{ vars.SCRIBE_URL }}
  SCRIBE_LOGIN_URL: ${{ vars.SCRIBE_LOGIN_URL }}
  SCRIBE_AUDIENCE: ${{ vars.SCRIBE_AUDIENCE }}
  SCRIBE_TOKEN: ${{ secrets.CLIENT_SECRET_AUTH }}

on: 
  workflow_dispatch:
   inputs:
      environment:
        type: choice
        description: Environment
        required: true
        options:
          - dev-demo
          - dev_eks
          - dev2_eks
          - ci_eks
          - test_eks
          - stg_eks
          - prod_eks
      product_version:
         description: 'Put product version'
         # required: true
         default: 'v.1.8.2'
      product_name:
         description: 'Put product name'
         # required: true
         default: 'diff_sign_format_types'
  

jobs:
  build:
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest

    permissions:
        contents: read
        packages: write
        id-token: write
    
    steps:

      - uses: actions/checkout@v4
      
      - name: Generate attest + mongo
        uses: scribe-security/action-bom@master
        with:
         type: docker
         target: mongo-express:latest
         format: attest
         scribe-enable: true
         product-key: ${{env.PRODUCT_NAME}}
         product-version: ${{env.PRODUCT_VERSION}}
         scribe-client-secret: ${{ env.SCRIBE_TOKEN}}
         scribe-url: ${{env.SCRIBE_URL}}


      - name: Generate attest_x509-env + mongo
        uses: scribe-security/action-bom@master
        with:
         type: docker
         target: mongo-express:1-18-alpine3.19
         format: attest
         attest-default: x509-env
         product-key: ${{env.PRODUCT_NAME}}
         product-version: ${{env.PRODUCT_VERSION}}
         scribe-client-secret: ${{ env.SCRIBE_TOKEN}}
         scribe-url: ${{ env.SCRIBE_URL}}
         label: ${{env.LABEL}}
         gate: github_alona
                
        env:
            ATTEST_KEY: ${{ secrets.ATTEST_KEY }}
            ATTEST_CERT: ${{ secrets.ATTEST_CERT}}
            ATTEST_CA:  ${{ secrets.ATTEST_CA }} 

      - name: Generate attest-cyclonedx-json+image
        uses: scribe-security/action-bom@master
        with:
                # statement-cyclonedx-json, attest, 
                type: docker
                target: mongo-express:1.0.0-20-alpine3.17
                format: attest-cyclonedx-json
                scribe-enable: true
                product-key: ${{env.PRODUCT_NAME}}
                product-version: ${{env.PRODUCT_VERSION}}
                scribe-client-secret: ${{ env.SCRIBE_TOKEN}}
                scribe-url: ${{env.SCRIBE_URL}}
                author-name: ${{env.AUTHOR_NAME}}
                author-email: ${{env.AUTHOR_EMAIL}}
                author-phone: ${{env.AUTHOR_PHONE}}
                supplier-name: ${{env.SUPPLIER_NAME}}
                supplier-url: ${{env.SUPPLIER_URL}}
                supplier-email: ${{env.SUPPLIER_EMAIL}} 
                supplier-phone: ${{env.SUPPLIER_PHONE}}
                label: ${{env.LABEL}}
                gate: github_action


      - name: Scm generate statement-cyclonedx-json+mongo
        # id: valint_bom_scm
        uses: scribe-security/action-bom@master
        with:
          type: docker
          target: mongo-express:1.0.0-20-alpine3.18
          format: statement-cyclonedx-json
          scribe-enable: true
          product-key: ${{env.PRODUCT_NAME}}
          product-version: ${{env.PRODUCT_VERSION}}
          scribe-client-secret: ${{ env.SCRIBE_TOKEN}}
          scribe-url: ${{env.SCRIBE_URL}}
         # format: statement-cyclonedx-json, attest-cyclonedx-json, statement-generic	
          label: ${{env.LABEL}}
          gate: github_action
 
          
      - name: Scm generate statement+mongo
        # id: valint_bom_scm
        uses: scribe-security/action-bom@master
        with:
          target: mongo-express:1.0.0-20
          format: statement
          scribe-enable: true
          product-key: ${{env.PRODUCT_NAME}}
          product-version: ${{env.PRODUCT_VERSION}}
          scribe-client-secret: ${{env.SCRIBE_TOKEN}}
          scribe-url: ${{env.SCRIBE_URL}}
         # format: statement-cyclonedx-json, attest-cyclonedx-json, statement-generic	
          label: ${{env.LABEL}}
          gate: github_action
     
      
      - name: Generate SLSA provenance attest
        id: valint_attest_slsa
        uses: scribe-security/action-bom@master
        with:
                type: docker
                target: mongo-express:1.0.0-20
                # attest-slsa, statement-slsa, attest-generic
                scribe-enable: true
                format: attest-slsa
                product-key: ${{env.PRODUCT_NAME}}
                product-version: ${{env.PRODUCT_VERSION}}
                # scribe-client-id: ${{ secrets.CLIENT_ID }}
                # scribe-client-secret: ${{ env.SCRIBE_TOKEN}}
                scribe-client-secret: ${{env.SCRIBE_TOKEN}}
                scribe-url: ${{env.SCRIBE_URL}}
                label: ${{env.LABEL}}
                gate: github_action
                deliverable: true
        
      - name: Generate SLSA provenance statement 
        id: valint_slsa_statement
        uses: scribe-security/action-bom@master
        with:
                type: docker
                target: mongo-express:latest
                # attest-slsa, statement-slsa, attest-generic
                scribe-enable: true
                format: statement-slsa
                product-key: ${{env.PRODUCT_NAME}}
                product-version: ${{env.PRODUCT_VERSION}}
                scribe-client-secret: ${{ env.SCRIBE_TOKEN}}
                scribe-url: ${{env.SCRIBE_URL}}
                gate: github_action
                deliverable: true
                
      - uses: actions/upload-artifact@v3
        with:
                name: provenance
                path: ${{ steps.valint_slsa_statement.outputs.OUTPUT_PATH }}
        




     
       
